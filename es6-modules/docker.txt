DB
sudo docker run -i -e POSTGRES_PASSWORD=pg --name pg_container postgres


access DB 
sudo docker exec -it pg_container bash
then when inside the container to run psql so that you can execute SQL

root@35b5d78742b0:/# psql -U postgres

postgres=# CREATE DATABASE ums;

postgres=# \c ums

postgres=# CREATE TABLE users(
   id serial PRIMARY KEY,
   name VARCHAR (255) NOT NULL,
   twitter_link VARCHAR (255) ,
   linkedin_url VARCHAR (255) ,	
   blog_URL VARCHAR (255) ,	
   password VARCHAR(20) NOT NULL,
   email VARCHAR(50) NOT NULL UNIQUE
);

postgres=# insert into users(name,twitter_link,password,email) values('sachin','twitter.com/sachin','1234','sachin@gmail.com');

postgres=# select * from users;


-------------------------------------------------
build web
sudo docker build -t node_image .

web
for pg_container
sudo docker run --publish 8000:8080 --name=node_container --link=pg_container:database --interactive node_image /bin/bash

with env variables
sudo docker run --publish 8000:8080 --env dbuser=postgres --env dbhost=database --env database=ums --env dbpassword=pg --env dbport=5432 --name=node_container --link=pg_container:database --interactive node_image /bin/bash


-------------------------------------------------------------------------
run web server app.js
sudo docker exec -it node_container node /usr/src/app/app.js

-----------------------------------------------------------------------------


run in dev mode
dbuser=postgres  dbhost=172.17.0.2  database=ums  dbpassword=pg  dbport=5432 node app.js 
if you restart docker containers then dbhost IP will change so find the IP using command 
sudo docker exec -it node_container cat /etc/hosts





//below code is commented for time being later on this feature can be added
//run createDb and users table migration before starting web server 
// createDb.create((status)=>{
// 	if(status==true){
// 		console.log('DB ready');
// 		tablesMigrate.addUsersTable(function(status){
// 			if(status==true){
// 				console.log('users table ready')
// 				app.listen(PORT, () => {
// 				    console.log(`The web server has started on port ${PORT}`);
// 				});
// 			}
// 		})

// 	}else{
// 		console.log('Problem connecting to DB')
// 	}
// })
